class Snake {
	field int x;
	field int y;
	field int length;
	field int direction;
	field Array body;

	constructor Snake new(int _x, int _y) {
		let x = _x;
		let y = _y;
		let length = 2;
		let direction = 0;
		let body = Array.new(length);

		do Gfx.drawHead(x, y);

		return this;
	}

	method void dispose() {
		do body.dispose();
		do Memory.deAlloc(this);
		return;
	}

	method int getX() {
		return x;
	}
	
	method int getY() {
		return y;
	}

	method void move(int direction) {
		// do Gfx.erase(x, y);
		var int i;

		// move body
		let i = length-1;
		while (i > 1) {
			let body[i] = body[i-2];
			let body[i-1] = body[i-3];
			let i = i - 2;
		}
		let body[1] = y;
		let body[0] = x;

		// move left
		if (direction = 1) {
			let x = x - 1;
		}
		// move right
		if (direction = 2) {
			let x = x + 1;
		}
		// move up
		if (direction = 3) {
			let y = y - 1;
		}
		// move down
		if (direction = 4) {
			let y = y + 1;
		}
		
		return;
	}
	
	method void draw(int direction) {
		var int i;
		let i = 1;

		do Gfx.drawHead(x, y);

		// draw body
		if (length > 2) {
			while (i < length) {
				do Gfx.drawBodyElement(body[i-1], body[i]);
				let i = i + 2;
			}
		}
		
		// erase last body element
		if (direction > 0) {
			do Gfx.erase(body[length-2], body[length-1]);
		}
		
		return;
	}

	method void grow() {
		let body = Utility.arrayAddCoords(body, length, x, y);
		let length = length + 2;
		
		return;
	}
}