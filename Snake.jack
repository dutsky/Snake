class Snake {
	field int x;
	field int y;
	field int length;
	field int direction;

	constructor Snake new(int _x, int _y) {
		let x = _x;
		let y = _y;
		let length = 0;
		let direction = 0;

		do Gfx.drawHead(x, y);

		return this;
	}

	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}

	method int getX() {
		return x;
	}
	
	method int getY() {
		return y;
	}

	method void move(int direction) {
		do Gfx.erase(x, y);

		// move left
		if (direction = 1) {
			let x = x - 1;
		}
		// move right
		if (direction = 2) {
			let x = x + 1;
		}
		// move up
		if (direction = 3) {
			let y = y - 1;
		}
		// move down
		if (direction = 4) {
			let y = y + 1;
			 
		}
		
		return;
	}
	
	method void draw() {
		do Gfx.drawHead(x, y);
		do Sys.wait(100);
		
		return;
	}

	method void grow() {
		let length = length + 1;

		return;
	}
}