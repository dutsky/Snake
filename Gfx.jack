class Gfx {
	function void erase(int x, int y) {
		var int location;
		var int memAddress;

		let location = Utility.coord2addr(x, y);
		let memAddress = 16384+location;
		
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		return;
	}

	function void drawHead(int x, int y) {
		var int location;
		var int memAddress;

		let location = Utility.coord2addr(x, y);
		let memAddress = 16384+location;
		
		do Memory.poke(memAddress+0, 960);
		do Memory.poke(memAddress+32, 3120);
		do Memory.poke(memAddress+64, 4104);
		do Memory.poke(memAddress+96, 8196);
		do Memory.poke(memAddress+128, 17442);
		do Memory.poke(memAddress+160, 16386);
		do Memory.poke(memAddress+192, -32767);
		do Memory.poke(memAddress+224, -32383);
		do Memory.poke(memAddress+256, -32767);
		do Memory.poke(memAddress+288, -30703);
		do Memory.poke(memAddress+320, 17442);
		do Memory.poke(memAddress+352, 17346);
		do Memory.poke(memAddress+384, 8196);
		do Memory.poke(memAddress+416, 4104);
		do Memory.poke(memAddress+448, 3120);
		do Memory.poke(memAddress+480, 960);
		
		return;
	}

	function void drawBody(int x, int y) {
		var int location;
		var int memAddress;

		let location = Utility.coord2addr(x, y);
		let memAddress = 16384+location;
		
		do Memory.poke(memAddress+0, 960);
		do Memory.poke(memAddress+32, 3120);
		do Memory.poke(memAddress+64, 4104);
		do Memory.poke(memAddress+96, 8196);
		do Memory.poke(memAddress+128, 16386);
		do Memory.poke(memAddress+160, 16386);
		do Memory.poke(memAddress+192, -32767);
		do Memory.poke(memAddress+224, -32767);
		do Memory.poke(memAddress+256, -32767);
		do Memory.poke(memAddress+288, -32767);
		do Memory.poke(memAddress+320, 16386);
		do Memory.poke(memAddress+352, 16386);
		do Memory.poke(memAddress+384, 8196);
		do Memory.poke(memAddress+416, 4104);
		do Memory.poke(memAddress+448, 3120);
		do Memory.poke(memAddress+480, 960);

		return;
	}
	
	method void drawApple(int x, int y) {
		var int location;
		var int memAddress;

		let location = Utility.coord2addr(x, y);
		let memAddress = 16384+location;
		
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 7168);
		do Memory.poke(memAddress+64, 512);
		do Memory.poke(memAddress+96, 256);
		do Memory.poke(memAddress+128, 3376);
		do Memory.poke(memAddress+160, 16380);
		do Memory.poke(memAddress+192, 32766);
		do Memory.poke(memAddress+224, -2049);
		do Memory.poke(memAddress+256, -7169);
		do Memory.poke(memAddress+288, -7169);
		do Memory.poke(memAddress+320, -2049);
		do Memory.poke(memAddress+352, -1);
		do Memory.poke(memAddress+384, 32766);
		do Memory.poke(memAddress+416, 16380);
		do Memory.poke(memAddress+448, 8184);
		do Memory.poke(memAddress+480, 1632);
		
		return;
	}

	function void drawWall(int x, int y) {
		var int location;
		var int memAddress;

		let location = Utility.coord2addr(x, y);
		let memAddress = 16384+location;

		do Memory.poke(memAddress+0, -32640);
		do Memory.poke(memAddress+32, -32640);
		do Memory.poke(memAddress+64, -32640);
		do Memory.poke(memAddress+96, -1);
		do Memory.poke(memAddress+128, 2056);
		do Memory.poke(memAddress+160, 2056);
		do Memory.poke(memAddress+192, 2056);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, -32640);
		do Memory.poke(memAddress+288, -32640);
		do Memory.poke(memAddress+320, -32640);
		do Memory.poke(memAddress+352, -1);
		do Memory.poke(memAddress+384, 2056);
		do Memory.poke(memAddress+416, 2056);
		do Memory.poke(memAddress+448, 2056);
		do Memory.poke(memAddress+480, -1);
		
		return;
	}

	function void placeWall() {
		var int i;

		let i = 0;

		while (i < 16) {
			do Gfx.drawWall(24, i);
			let i = i + 1;
		}

		return;
	}
}