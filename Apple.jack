class Apple {
	field int x;
	field int y;
	field int memAddress;

	constructor Apple new(int _x, int _y) {
		let x = _x;
		let y = _y;

		do Screen.setColor(true);
		do drawApple(x);

		return this;
	}

	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}

	method void drawApple(int location) {
		let memAddress = 16384+location;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 7168);
		do Memory.poke(memAddress+64, 512);
		do Memory.poke(memAddress+96, 256);
		do Memory.poke(memAddress+128, 3376);
		do Memory.poke(memAddress+160, 16380);
		do Memory.poke(memAddress+192, 32766);
		do Memory.poke(memAddress+224, -2049);
		do Memory.poke(memAddress+256, -7169);
		do Memory.poke(memAddress+288, -7169);
		do Memory.poke(memAddress+320, -2049);
		do Memory.poke(memAddress+352, -1);
		do Memory.poke(memAddress+384, 32766);
		do Memory.poke(memAddress+416, 16380);
		do Memory.poke(memAddress+448, 8184);
		do Memory.poke(memAddress+480, 1632);
		return;
	}
}