class Game {
	field Snake snake;
	field Apple apple;
	
	constructor Game new() {		
		do Screen.clearScreen();
		do Gfx.placeWall();
	
		let snake = Snake.new(12, 8);
		let apple = Apple.new();
	
	 	return this;
	}

	method boolean checkWallCollision() {
		var boolean status;
		let status = false;
		
		if (snake.getX() < 0) {
			let status = true;
		}
		if (snake.getX() > 23) {
			let status = true;
		}
		if (snake.getY() < 0) {
			let status = true;
		}
		if (snake.getY() > 15) {
			let status = true;
		}
		
		return status;
	}
	
	method void debugCoords() {
		do Output.moveCursor(2, 54);
		do Output.printString("X: ");
		do Output.printInt(snake.getX());
		do Output.printString(" ");
		do Output.moveCursor(3, 54);
		do Output.printString("Y: ");
		do Output.printInt(snake.getY());
		do Output.printString(" ");

		return;
	}

	method void run() {
		var int direction;
		var char key;
		var boolean exit;
		let exit = false;
		let direction = 0;

		//let apple = Apple.new(128, 16);

		while (~exit) {
			//if (key = 0) {
			//	let key = Keyboard.keyPressed();
			//	do snake.move(direction);
			//	do debugCoords();
			//}
			let key = Keyboard.keyPressed();
			do snake.move(direction);
			
			if (checkWallCollision() = true) {
				let exit = true;
			} else {
				do snake.draw();
			}

			do debugCoords();

			if (key = 130) {
				let direction = 1;
			}

			if (key = 131) {
				let direction = 3;
			}

			if (key = 132) {
				let direction = 2;
			}

			if (key = 133) {
				let direction = 4;
			}
		}

		return;
	}
}